query Tasks {
  tasks {
    id
    priority
    status
    count
    title
    createdAt
    leadId #remove
    ownerId #remove
    projectId #remove
    labels {
      id
      name
      color
    }

    project {
      id
      name
    }

    lead {
      id
      name
      photoUrl
    }
    assignees {
      #remove
      id
      name
    }
  }
}

query TaskById($taskId: UUID!) {
  task(id: $taskId) {
    __typename
    id
    title
    description
    ownerId
    status
    priority
    dueDate
    count
    parent {
      id
      count
    }
    labels {
      id
      name
    }
    assignees {
      id
      name
    }
    lead {
      id
      name
      photoUrl
    }
    project {
      id
      name
    }
    subtasks {
      id
      createdAt
      updatedAt
      title
      description
      status
      priority
      ownerId
      count
      labels {
        id
        name
        color
      }
      leadId
      projectId
      dueDate

      owner {
        id
      }
      assignees {
        id
        name
      }
      project {
        id
        name
      }

      lead {
        id
        name
      }
    }
  }
}

mutation NewTask($input: CreateTaskInput!) {
  createTask(input: $input) {
    id
    title
    status
  }
}

mutation DeleteTask($taskId: UUID!) {
  deleteTask(id: $taskId) {
    id
    title
  }
}
mutation UpdateTask($id: UUID!, $input: UpdateTaskInput!) {
  updateTask(id: $id, input: $input) {
    __typename
    id
    title
  }
}

query SuggestNewTask($input: TaskSuggestionInput!) {
  suggestNextTask(input: $input) {
    title
    description
    status
    priority
    dueDate
  }
}

query SubdivideTask($input: SubdivideTaskInput!) {
  #UPDATED
  subdivideTask(input: $input) {
    title
    description
    status
    priority
    dueDate
  }
}

mutation CreateTasks($input: CreateTasksInput!) {
  createTasks(input: $input) {
    id
    title
  }
}

query TaskChanges($input: GetChangesInput) {
  changes(input: $input) {
    id
    createdAt
    resourceId
    operation
    resourceType
    owner {
      name
      photoUrl
    }
  }
}
