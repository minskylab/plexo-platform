query Tasks {
  tasks {
    id
    createdAt
    updatedAt
    title
    description
    status
    priority
    ownerId
    count
    labels {
      id
      name
      color
    }
    leadId
    projectId
    dueDate

    owner {
      id
    }
    assignees {
      id
      name
    }
    project {
      id
      name
    }

    leader {
      id
      name
      photoUrl
    }
  }
}

query TaskById($taskId: UUID!) {
  taskById(id: $taskId) {
    id
    title
    description
    ownerId
    status
    priority
    dueDate
    count
    parent {
      id
      count
    }
    labels {
      id
      name
    }
    assignees {
      id
      name
    }
    leader {
      id
      name
      photoUrl
    }
    project {
      id
      name
    }
    subtasks {
      id
      createdAt
      updatedAt
      title
      description
      status
      priority
      ownerId
      count
      labels {
        id
        name
        color
      }
      leadId
      projectId
      dueDate

      owner {
        id
      }
      assignees {
        id
        name
      }
      project {
        id
        name
      }

      leader {
        id
        name
      }
    }
  }
}

subscription TasksSubscription {
  tasks {
    id
    createdAt
    updatedAt
    title
    description
    status
    priority
    ownerId
    count
  }
}

mutation NewTask(
  $title: String!
  $description: String
  $status: String
  $priority: String
  $projectId: UUID
  $leadId: UUID
  $labels: [UUID!]
  $assignees: [UUID!]
  $dueDate: DateTime
  $subtasks: [CreateTaskInput!]
  $parentId: UUID
) {
  createTask(
    title: $title
    description: $description
    status: $status
    priority: $priority
    projectId: $projectId
    leadId: $leadId
    labels: $labels
    assignees: $assignees
    dueDate: $dueDate
    subtasks: $subtasks
    parentId: $parentId
  ) {
    id
    title
    status
  }
}

mutation DeleteTask($taskId: UUID!) {
  deleteTask(id: $taskId) {
    id
    title
  }
}

mutation UpdateTask(
  $taskId: UUID!
  $status: String
  $priority: String
  $title: String
  $description: String
  $dueDate: DateTime
  $projectId: UUID
  $leadId: UUID
  $labels: [UUID!]
  $assignees: [UUID!]
) {
  updateTask(
    id: $taskId
    status: $status
    title: $title
    priority: $priority
    description: $description
    dueDate: $dueDate
    projectId: $projectId
    leadId: $leadId
    labels: $labels
    assignees: $assignees
  ) {
    id
    title
  }
}

query SuggestNewTask($taskSuggestion: TaskSuggestionInput!) {
  suggestNewTask(task: $taskSuggestion) {
    title
    description
    status
    priority
    dueDate
  }
}

query SubdivideTask($taskId: String!, $count: Int) {
  subdivideTask(taskId: $taskId, subtasks: $count) {
    title
    description
    status
    priority
    dueDate
  }
}

mutation CreateTasks($tasks: [CreateTaskInput!]!) {
  createTasks(tasks: $tasks) {
    id
    title
  }
}

query TaskActivity($resourceId: UUID, $resourceType: ActivityResourceType) {
  activity(resourceId: $resourceId, resourceType: $resourceType) {
    id
    createdAt
    memberId
    resourceId
    operation
    resourceType
    member {
      name
      photoUrl
    }
  }
}
